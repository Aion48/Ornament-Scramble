window.onload = function() {

     // Player 
 var playerheight = 50;


 var player = new WebImage("https://codehs.com/uploads/aecf7f720e9d3a89426b19bd2f6aedfd");
 player.setSize(playerheight, playerheight);
 player.setPosition(25, 300);
 var playerUp = true;
 var playerJumping = false;
 var playerCanJump = false;
 var movingRight = false;
 var movingLeft = false;

 //sounds

 var backgroundmusic = new Audio("https://codehs.com/uploads/610c494e06c56f7625b8a715a60c3562");

 var axeEffect = new Audio("https://codehs.com/uploads/44859ffd322d2eca94b9b3cb973243ac");

 // Santa

 var santa = new WebImage("https://codehs.com/uploads/be8ff38f7386c9255b39a0ec56745c7a");
 santa.setSize(50, 50);
 santa.setPosition(25, 405);

 // Floor
 var floor = new WebImage("https://codehs.com/uploads/f8cf192c5068944f3d327b95fae31079")
 floor.setSize(50 + (getWidth() * 3), 25);
 floor.setPosition(0, (getHeight() - 25));

 var floor1 = new WebImage("https://codehs.com/uploads/1d360ce0238f5e514743a671436abb26")
 floor1.setSize((getWidth() * 1.5), 25);
 floor1.setPosition(1450, (getHeight() - 25))

 //var floor2 = new Rectangle(g)
 var background = new WebImage("https://codehs.com/uploads/7572b93909812163760726ee2a0335d2");
 background.setSize(2050, 480);
 // Platform

 var platform1 = new WebImage("https://codehs.com/uploads/47da9cc9da44c3c5b952d2b8690af29f");
 platform1.setSize(150, 25);
 platform1.setPosition(0, 180);

 var platform2 = new WebImage("https://codehs.com/uploads/07c5ba535acb4315034ed7b73f142a3c")
 platform2.setPosition(290, 50)
 platform2.setSize(600, 25);

 var platform3 = new WebImage("https://codehs.com/uploads/973c4dadcfd58e0fc5586449bec93299");
 platform3.setSize(150, 60);
 platform3.setPosition(950, getHeight() - (platform3.getHeight() + floor.getHeight()));

 var platform4 = new WebImage("https://codehs.com/uploads/5a4071815c4c67e499c5a8b05df08a1c");
 platform4.setSize(150, 120);
 platform4.setPosition(950 + platform3.getWidth(), getHeight() - (platform4.getHeight() + floor.getHeight()));

 var platform5 = new WebImage("https://codehs.com/uploads/2fa5595320f39558de10fb6c1bb8d03e");
 platform5.setSize(floor1.getX() + floor1.getWidth() - 1090, 25);
 platform5.setPosition(1090, 50);

 var platform6 = new WebImage("https://codehs.com/uploads/5a4071815c4c67e499c5a8b05df08a1c");
 platform6.setSize(150, 120);
 platform6.setPosition(1300 + platform3.getWidth(), getHeight() - (platform4.getHeight() + floor.getHeight()));

 var platform7 = new WebImage("https://codehs.com/uploads/973c4dadcfd58e0fc5586449bec93299");
 platform7.setSize(150, 60);
 platform7.setPosition(platform6.getX() + platform6.getWidth(), getHeight() - (platform3.getHeight() + floor.getHeight()));
 platform7.setColor(Color.white);

 var wallLeft = new Rectangle(getWidth(), getHeight() + 100)
 wallLeft.setPosition(0 - getWidth(), -100);
 wallLeft.setColor(Color.black);

 var wallRight = new Rectangle(getWidth(), getHeight() + 200);
 wallRight.setPosition(floor1.getX() + floor1.getWidth(), -200);
 wallRight.setColor(Color.green);

 var wall1 = new WebImage("https://codehs.com/uploads/f333f28ed04166eb6a32c39caded83ca");
 wall1.setSize(300, getHeight() - 200);
 wall1.setPosition(350, 200)
 wall1.setColor(Color.black);
 // ornaments

 var ornament1 = new Circle(10);
 ornament1.setPosition(70, 160);
 ornament1.setColor(Color.red)

 var ornament2 = new Circle(10);
 ornament2.setPosition(320, 300);
 ornament2.setColor(Color.blue)

 var ornament3 = new Circle(10);
 ornament3.setPosition(500, 25);
 ornament3.setColor(Color.yellow)

 var ornament4 = new Circle(10);
 ornament4.setPosition(700, 25);
 ornament4.setColor(Color.red)

 var ornament5 = new Circle(10);
 ornament5.setPosition(760, 420);
 ornament5.setColor(Color.green)

 var ornament6 = new Circle(10);
 ornament6.setPosition(2000, 25);
 ornament6.setColor(Color.yellow)

 var ornament7 = new Circle(10);
 ornament7.setPosition(1250, 300);
 ornament7.setColor(Color.blue)

 var ornament8 = new Circle(10);
 ornament8.setPosition(1450, 300);
 ornament8.setColor(Color.orange)

 var ornament9 = new Circle(10);
 ornament9.setPosition(1350, 100);
 ornament9.setColor(Color.red)

 var ornament10 = new Circle(10);
 ornament10.setPosition(2000, 420);
 ornament10.setColor(Color.green)

 var ornaments = [ornament1, ornament2, ornament3, ornament4, ornament5, ornament6, ornament7, ornament8, ornament9, ornament10];

 var numornaments = 0;

 var score = new Text(numornaments + "/10", "30pt Arial");
 score.setColor(Color.green);
 score.setPosition(0, score.getHeight());



 //elves

 var elf1left = new WebImage("https://codehs.com/uploads/e4f89e291b0ccd6467808e1cb7f66799");
 var elf2left = new WebImage("https://codehs.com/uploads/e4f89e291b0ccd6467808e1cb7f66799");
 var elf3left = new WebImage("https://codehs.com/uploads/e4f89e291b0ccd6467808e1cb7f66799");
 var elf1right = new WebImage("https://codehs.com/uploads/8ec3e392c775e04ae97e7499b88c28e7");
 var elf2right = new WebImage("https://codehs.com/uploads/8ec3e392c775e04ae97e7499b88c28e7");
 var elf3right = new WebImage("https://codehs.com/uploads/8ec3e392c775e04ae97e7499b88c28e7");

 elf1left.setSize(50, 50);
 elf2left.setSize(50, 50);
 elf3left.setSize(50, 50);
 elf1right.setSize(50, 50);
 elf2right.setSize(50, 50);
 elf3right.setSize(50, 50);


 elf1left.setPosition(200, getHeight() - 75);
 elf2left.setPosition(700, getHeight() - 75);
 elf3left.setPosition(1800, getHeight() - 75);
 elf1right.setPosition(200, getHeight() - 75);
 elf2right.setPosition(700, getHeight() - 75);
 elf3right.setPosition(1800, getHeight() - 75);

 var elves = [elf1left, elf2left, elf3left]

 var elftime = 0;
 var objectArray = [floor, floor1, platform1, platform2, platform3, platform4, platform5, platform6, platform7, wallLeft, wallRight, wall1];
 // Constant

 var gravity = 1;
 var accelerationDueToGravity = 9.8;
 var jumpHeight = 30;
 var santaMoving = false;
 // Santas Paths

 var oneToTwo = [3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 396, 3, 388.04193846089197, 3, 380.1275742171778, 3, 372.2587398661716, 3, 364.437344861498, 3, 356.6653787363279, 3, 348.94491446179137, 3, 341.27811194623706, 3, 333.6672216812454, 3, 326.11458854055, 3, 318.6226557382799, 3, 311.19396895320415, 3, 303.8311806259415, 3, 296.5370544363878, 3, 289.3144699689201, 3, 282.16642757325224, 3, 275.09605342914716, 3, 268.10660482353563, 3, 261.20147564894893, 3, 254.3842021325475, 3, 247.65846880541625, 3, 241.028114722203, 3, 234.49713994159862, 3, 228.0697122785991, 3, 221.7501743399466, 3, 215.54305085462624, 3, 209.4530563117928, 3, 203.4851029190201, 3, 197.64430889430716, 3, 191.93600710583837, 3, 195.36575407408196, 3, 198.93933935142252, 3, 202.66279529516083, 3, 206.54240725037852, 3, 210.584724159856, 3, 214.79656961895444, 3, 219.1850533941222, 3, 223.75758342446977, 3, 228.52187832667232, 3, 233.48598042430856, 3, 238.65826932363015, -3, 235.04747605867777, -3, 227.08941451956971, -3, 219.1750502758556, -3, 211.30621592484937, -3, 203.48482092017576, -3, 195.7128547950057, -3, 187.9923905204692, -3, 180.3255880049149, -3, 172.71469773992322, -3, 165.16206459922785, -3, 157.6701317969577, -3, 150.24144501188195, -3, 142.87865668461933, -3, 135.58453049506562, -3, 128.36194602759792, -3, 121.21390363193005, -3, 114.143529487825, -3, 107.15408088221349, -3, 100.24895170762679, -3, 93.43167819122534, -3, 86.70594486409412, -3, 80.07559078088084, -3, 73.54461600027649, -3, 67.11718833727699, -3, 60.79765039862447, -3, 54.59052691330412, -3, 48.50053237047069, -3, 42.53257897769798, -3, 36.691784952985024, -3, 30.98348316451624, -3, 34.41323013275984, -3, 37.98681541010039, -3, 41.71027135383871, -3, 45.58988330905638, -3, 49.63220021853387, -3, 53.844045677632316, -3, 58.23252945280008, -3, 62.805059483147645, -3, 62.805059483147645, -3, 67.56935438535018, -3, 72.53345648298642, -3, 77.70574538230801, -3, 83.09495211735563, -3, 88.71017388829965, -3, 94.560889417884, -3, 100.6569749518957, -3, 107.00872093066951, -3, 113.62684935976968, -3, 120.52253190917153, -3, 127.70740877149474, -3, 135.19360831112192, -3, 135.19360831112192, -3, 135.19360831112192, -3, 135.19360831112192, -3, 135.19360831112192, -3, 135.19360831112192, -3, 135.19360831112192, -3, 135.19360831112192, -3, 135.19360831112192, -3, 135.19360831112192, -3, 135.19360831112192, -3, 135.19360831112192, -3, 135.19360831112192, -3, 135.19360831112192, 3, 135.19360831112192, 3, 136.23554677201386, 3, 128.32118252829974, 3, 120.45234817729352, 3, 112.63095317261991, 3, 104.85898704744986, 3, 97.13852277291335, 3, 89.47172025735902, 3, 81.86082999236737, 3, 74.30819685167198, 3, 66.81626404940184, 3, 59.38757726432611, 3, 52.02478893706348, 3, 44.730662747509776, 3, 37.508078280042064, 3, 37.508078280042064, 3, 30.36003588437419, 3, 23.28966174026914, -3, 16.300213134657625, -3, 16.300213134657625, -3, 9.395083960070917, -3, 2.5778104436694775, -3, -4.147922883461753, -3, -10.778276966675024, -3, -17.309251747279383, -3, -23.736679410278892, -3, -30.05621734893141, -3, -36.263340834251764, -3, -42.353335377085195, -3, -48.3212887698579, -3, -54.16208279457086, -3, -59.87038458303964, -3, -56.44063761479604, -3, -61.86705233745549, -3, -67.14359639371716, -3, -63.26398443849949, -3, -59.22166752902201, -3, -55.00982206992356, -3, -50.621338294755795, -3, -46.04880826440822, -3, -41.284513362205686, -3, -36.32041126456944, -3, -31.14812236524785, -3, -25.75891563020023, -3, -20.143693859256217, -3, -14.292978329671872, -3, -14.292978329671872, -3, -8.196892795660165, -3, -1.8451468168863618, -3, 4.772981612213811, -3, 11.668664161615665, -3, 18.85354102393887, -3, 26.339740563566053, -3, 34.13989978981518, -3, 42.26718568872529, -3, 50.73531744946449, -3, 59.55858962287928, -3, 68.75189625127781, -3, 78.33075601017909, -3, 88.31133840446846, -3, 98.71049106317956, -3, 109.54576817897737, -3, 120.83546014034944, -3, 132.59862440652563]
 var twoToThree = [3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 131.04193846089194, 3, 132.12757421717782, 3, 133.2587398661716, 3, 134.437344861498, 3, 135.66537873632794, 3, 136.94491446179143, 3, 138.27811194623712, 3, 139.66722168124545, 3, 141.11458854055007, 3, 142.62265573827992, 3, 144.19396895320418, 3, 145.83118062594156, 3, 147.53705443638785, 3, 149.31446996892015, 3, 151.1664275732523, 3, 153.09605342914725, 3, 155.10660482353575, 3, 157.20147564894904, 3, 159.3842021325476, 3, 161.6584688054164, 3, 164.02811472220313, 3, 166.49713994159876, 3, 169.06971227859924, 3, 171.75017433994674, 3, 174.5430508546264, 3, 177.45305631179295, 3, 180.48510291902025, 3, 183.6443088943073, 3, 186.9360071058385, 3, 190.3657540740821, 3, 193.93933935142266, 3, 197.66279529516098, 3, 201.54240725037866, 3, 205.58472415985614, 3, 209.79656961895458, 3, 214.18505339412235, 3, 218.7575834244699, 3, 223.52187832667246, 3, 228.4859804243087, 3, 233.6582693236303, 3, 239.04747605867792, 3, 244.66269782962192, 3, 250.51341335920625, 3, 256.60949889321796, 3, 262.96124487199177, 3, 269.57937330109195, 3, 276.4750558504938, 3, 283.659932712817, 3, 291.1461322524442, 3, 298.94629147869335, 3, 298.94629147869335, 3, 298.94629147869335, 3, 298.94629147869335, 3, 298.94629147869335, 3, 298.94629147869335, 3, 298.94629147869335, 3, 298.94629147869335, 3, 298.94629147869335, 3, 298.94629147869335, 3, 298.94629147869335, 3, 298.94629147869335, 3, 298.94629147869335, 3, 298.94629147869335, 3, 298.94629147869335, 3, 298.94629147869335, 3, 298.94629147869335, 3, 298.94629147869335, 3, 298.94629147869335, 3, 298.94629147869335, 3, 298.94629147869335, 3, 298.94629147869335, 3, 298.94629147869335, 3, 298.94629147869335, 3, 298.94629147869335, 3, 298.94629147869335, 3, 298.94629147869335, 3, 298.94629147869335, 3, 298.94629147869335, 3, 289.94629147869335, 3, 280.94629147869335, 3, 271.94629147869335, 3, 262.94629147869335, 3, 253.94629147869335, 3, 244.94629147869335, 3, 235.94629147869335, 3, 226.94629147869335, 3, 217.94629147869335, 3, 208.94629147869335, 3, 199.94629147869335, 3, 190.94629147869335, 3, 181.94629147869335, 3, 172.94629147869335, 3, 163.94629147869335, 3, 154.94629147869335, 3, 145.94629147869335, 3, 137.9882299395853, 3, 130.07386569587118, 3, 122.20503134486495, 3, 114.38363634019134, 3, 106.61167021502129, 3, 98.89120594048478, 3, 91.22440342493046, 3, 83.6135131599388, 3, 76.06088001924341, 3, 77.56894721697327, 3, 79.14026043189754, 3, 80.77747210463491, 3, 82.4833459150812, 3, 84.26076144761349, 3, 86.11271905194562, 3, 88.04234490784057, 3, 90.05289630222906, 3, 92.14776712764235, 3, 94.33049361124091, 3, 96.60476028410969, 3, 98.97440620089641, 3, 101.44343142029206, 3, 104.01600375729255, 3, 106.69646581864004, 3, 109.48934233331968, 3, 112.39934779048625, 3, 115.43139439771353, 3, 118.59060037300058, 3, 121.8822985845318, 3, 125.3120455527754, 3, 128.88563083011596, 3, 132.60908677385427, 3, 136.48869872907196, 3, 140.53101563854943, 3, 144.74286109764788, 3, 149.13134487281565, 3, 153.7038749031632, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150]
 var twoToFive = [3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 121, 3, 113.04193846089194, 3, 105.12757421717781, 3, 97.25873986617157, 3, 89.43734486149796, 3, 81.66537873632791, 3, 73.9449144617914, 3, 66.27811194623708, 3, 58.66722168124542, 3, 51.11458854055003, 3, 43.62265573827988, 3, 36.19396895320415, 3, 28.831180625941514, 3, 21.53705443638781, 3, 14.3144699689201, 3, 7.1664275732522285, 3, 0.09605342914717951, 3, -6.893395176464335, 3, -13.798524351051043, 3, -20.615797867452482, 3, -27.341531194583713, 3, -33.971885277796986, 3, -40.50286005840134, 3, -46.930287721400845, 3, -53.24982566005336, 3, -59.45694914537371, 3, -65.54694368820714, 3, -71.51489708097984, 3, -77.35569110569278, 3, -83.06399289416157, 3, -79.63424592591797, 3, -76.06066064857741, 3, -72.33720470483908, 3, -68.45759274962141, 3, -64.41527584014392, 3, -60.20343038104547, 3, -55.81494660587771, 3, -51.24241657553014, 3, -46.47812167332761, 3, -41.51401957569136, 3, -36.34173067636977, 3, -30.952523941322152, 3, -25.337302170378138, 3, -19.486586640793792, 3, -13.390501106782086, 3, -7.038755128008282, 3, -0.42062669890810955, 3, 6.475055850493744, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0]
 var oneToThree = [3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 397.04193846089197, 3, 389.1275742171778, 3, 381.2587398661716, 3, 373.437344861498, 3, 365.6653787363279, 3, 357.94491446179137, 3, 350.27811194623706, 3, 342.6672216812454, 3, 335.11458854055, 3, 327.6226557382799, 3, 320.19396895320415, 3, 312.8311806259415, 3, 305.5370544363878, 3, 298.3144699689201, 3, 291.16642757325224, 3, 284.09605342914716, 3, 277.10660482353563, 3, 270.20147564894893, 3, 263.3842021325475, 3, 256.65846880541625, 3, 250.028114722203, 3, 243.49713994159862, 3, 237.0697122785991, 3, 230.7501743399466, 3, 224.54305085462624, 3, 218.4530563117928, 3, 212.4851029190201, 3, 206.64430889430716, 3, 200.93600710583837, 3, 195.36575407408196, 3, 198.93933935142252, 3, 202.66279529516083, 3, 206.54240725037852, 3, 206.54240725037852, 3, 210.584724159856, 3, 214.79656961895444, 3, 219.1850533941222, 3, 223.75758342446977, 3, 228.52187832667232, 3, 233.48598042430856, 3, 238.65826932363015, 3, 244.04747605867777, 3, 249.66269782962178, 3, 255.5134133592061, 3, 261.60949889321785, 3, 267.96124487199165, 3, 274.57937330109183, 3, 281.4750558504937, 3, 288.6599327128169, 3, 296.1461322524441, 3, 296.1461322524441, 3, 296.1461322524441, 3, 296.1461322524441, 3, 296.1461322524441, 3, 296.1461322524441, 3, 296.1461322524441, 3, 296.1461322524441, 3, 296.1461322524441, 3, 296.1461322524441, 3, 296.1461322524441, 3, 296.1461322524441, 3, 296.1461322524441, -3, 287.1461322524441, -3, 279.18807071333606, -3, 271.2737064696219, -3, 263.4048721186157, -3, 255.58347711394208, -3, 247.81151098877203, -3, 240.09104671423552, -3, 232.4242441986812, -3, 224.81335393368954, -3, 217.26072079299416, -3, 209.768787990724, -3, 202.34010120564827, -3, 194.97731287838565, -3, 187.68318668883194, -3, 180.46060222136424, -3, 173.31255982569638, 3, 164.31255982569638, -3, 166.24218568159134, 3, 157.24218568159134, 3, 150.25273707597984, 3, 143.34760790139313, 3, 136.5303343849917, 3, 129.80460105786048, 3, 123.17424697464722, 3, 116.64327219404286, 3, 110.21584453104336, 3, 103.89630659239084, 3, 97.68918310707049, 3, 91.59918856423705, 3, 85.63123517146434, 3, 79.79044114675139, 3, 83.0821393582826, 3, 86.51188632652621, 3, 90.08547160386676, 3, 93.8089275476051, 3, 97.68853950282276, 3, 101.73085641230026, 3, 105.94270187139871, 3, 110.33118564656647, 3, 110.33118564656647, 3, 114.90371567691403, 3, 119.66801057911657, 3, 124.63211267675281, 3, 129.80440157607438, 3, 135.193608311122, 3, 140.808830082066, 3, 146.65954561165034, 3, 152.75563114566205, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150]
 var fiveToFour
 var fiveToSix
 var sixToSeven
 var sixToFive
 var sixToFour
 var twoToOne = [3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 130, 3, 131.04193846089194, 3, 132.12757421717782, 3, 133.2587398661716, 3, 134.437344861498, 3, 135.66537873632794, 3, 136.94491446179143, 3, 138.27811194623712, 3, 139.66722168124545, 3, 141.11458854055007, 3, 142.62265573827992, 3, 144.19396895320418, 3, 145.83118062594156, 3, 147.53705443638785, 3, 149.31446996892015, 3, 151.1664275732523, 3, 153.09605342914725, 3, 155.10660482353575, 3, 157.20147564894904, 3, 159.3842021325476, 3, 161.6584688054164, 3, 164.02811472220313, 3, 166.49713994159876, 3, 169.06971227859924, 3, 171.75017433994674, 3, 174.5430508546264, 3, 177.45305631179295, -3, 177.45305631179295, 3, 180.48510291902025, -3, 180.48510291902025, 3, 183.6443088943073, -3, 183.6443088943073, -3, 186.9360071058385, -3, 190.3657540740821, -3, 193.93933935142266, -3, 197.66279529516098, -3, 201.54240725037866, -3, 205.58472415985614, -3, 209.79656961895458, -3, 209.79656961895458, -3, 214.18505339412235, -3, 218.7575834244699, -3, 223.52187832667246, -3, 228.4859804243087, -3, 233.6582693236303, -3, 239.04747605867792, -3, 244.66269782962192, -3, 250.51341335920625, -3, 256.60949889321796, -3, 262.96124487199177, -3, 269.57937330109195, -3, 276.4750558504938, -3, 283.659932712817, -3, 291.1461322524442, -3, 298.94629147869335, -3, 307.07357737760344, -3, 315.54170913834264, -3, 324.36498131175745, -3, 333.558287940156, -3, 343.13714769905727, -3, 353.1177300933466, -3, 363.5168827520577, -3, 374.3521598678555, -3, 385.64185182922756, -3, 397.40501609540377, -3, 409.66150936612246, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405]
 var threeToOne
 var threeToTwo
 var fiveToTwo
 var fourToThree = [-3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 396, -3, 388.04193846089197, -3, 380.1275742171778, -3, 372.2587398661716, -3, 364.437344861498, -3, 356.6653787363279, -3, 348.94491446179137, -3, 341.27811194623706, -3, 333.6672216812454, -3, 326.11458854055, -3, 318.6226557382799, -3, 311.19396895320415, -3, 303.8311806259415, -3, 296.5370544363878, -3, 289.3144699689201, -3, 282.16642757325224, -3, 275.09605342914716, -3, 268.10660482353563, -3, 261.20147564894893, -3, 254.3842021325475, -3, 247.65846880541625, -3, 241.028114722203, -3, 234.49713994159862, -3, 228.0697122785991, -3, 221.7501743399466, -3, 215.54305085462624, -3, 209.4530563117928, -3, 203.4851029190201, -3, 197.64430889430716, -3, 188.64430889430716, -3, 188.64430889430716, -3, 188.64430889430716, -3, 188.64430889430716, -3, 188.64430889430716, -3, 188.64430889430716, -3, 188.64430889430716, -3, 188.64430889430716, -3, 188.64430889430716, -3, 188.64430889430716, -3, 188.64430889430716, -3, 179.64430889430716, -3, 170.64430889430716, -3, 161.64430889430716, -3, 152.64430889430716, -3, 143.64430889430716, -3, 135.6862473551991, -3, 127.77188311148498, -3, 119.90304876047875, -3, 112.08165375580515, -3, 104.3096876306351, -3, 96.58922335609859, -3, 88.92242084054426, -3, 81.31153057555261, -3, 82.75889743485722, -3, 84.26696463258708, -3, 85.83827784751135, -3, 87.47548952024871, -3, 89.181363330695, -3, 90.9587788632273, -3, 92.81073646755942, -3, 94.74036232345438, -3, 96.75091371784286, -3, 98.84578454325616, -3, 101.02851102685472, -3, 103.30277769972349, -3, 105.67242361651022, -3, 108.14144883590586, -3, 110.71402117290636, -3, 113.39448323425384, -3, 116.18735974893349, -3, 119.09736520610005, -3, 122.12941181332734, -3, 125.28861778861439, -3, 128.58031600014561, -3, 132.0100629683892, -3, 135.58364824572976, -3, 139.30710418946808, -3, 143.18671614468576, -3, 147.22903305416324, -3, 151.44087851326168, -3, 150, -3, 150, -3, 150, -3, 150, -3, 150, -3, 150]
 var fourToSeven = [3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 396, 3, 388.04193846089197, 3, 380.1275742171778, 3, 372.2587398661716, 3, 364.437344861498, 3, 356.6653787363279, 3, 348.94491446179137, 3, 341.27811194623706, 3, 333.6672216812454, 3, 326.11458854055, 3, 318.6226557382799, 3, 311.19396895320415, 3, 303.8311806259415, 3, 296.5370544363878, 3, 289.3144699689201, 3, 282.16642757325224, 3, 275.09605342914716, 3, 268.10660482353563, 3, 261.20147564894893, 3, 254.3842021325475, 3, 247.65846880541625, 3, 241.028114722203, 3, 234.49713994159862, 3, 228.0697122785991, 3, 221.7501743399466, 3, 215.54305085462624, 3, 209.4530563117928, 3, 203.4851029190201, 3, 197.64430889430716, 3, 191.93600710583837, 3, 195.36575407408196, 3, 198.93933935142252, 3, 202.66279529516083, 3, 206.54240725037852, 3, 210.584724159856, 3, 214.79656961895444, 3, 219.1850533941222, 3, 223.75758342446977, 3, 228.52187832667232, 3, 233.48598042430856, 3, 238.65826932363015, 3, 244.04747605867777, 3, 249.66269782962178, 3, 255.5134133592061, 3, 261.60949889321785, 3, 267.96124487199165, 3, 274.57937330109183, 3, 281.4750558504937, 3, 288.6599327128169, 3, 296.1461322524441, 3, 303.94629147869324, 3, 312.0735773776033, 3, 320.5417091383425, 3, 329.36498131175733, 3, 338.5582879401559, 3, 348.13714769905715, 3, 345, 3, 345, 3, 345, 3, 336, 3, 328.04193846089197, 3, 320.1275742171778, 3, 312.2587398661716, 3, 304.437344861498, 3, 296.6653787363279, 3, 288.94491446179137, 3, 281.27811194623706, 3, 273.6672216812454, 3, 266.11458854055, 3, 258.6226557382799, 3, 251.19396895320415, 3, 243.83118062594153, 3, 236.53705443638782, 3, 229.31446996892012, 3, 222.16642757325226, 3, 215.09605342914722, 3, 208.1066048235357, 3, 201.20147564894899, 3, 194.38420213254756, 3, 187.65846880541633, 3, 181.02811472220307, 3, 174.4971399415987, 3, 168.06971227859918, 3, 161.75017433994668, 3, 155.54305085462633, 3, 149.4530563117929, 3, 143.4851029190202, 3, 137.64430889430724, 3, 131.93600710583846, 3, 135.36575407408205, 3, 138.9393393514226, 3, 142.66279529516092, 3, 146.5424072503786, 3, 150.58472415985608, 3, 154.79656961895452, 3, 159.1850533941223, 3, 163.75758342446986, 3, 168.5218783266724, 3, 173.48598042430865, 3, 178.65826932363024, 3, 184.04747605867786, 3, 189.66269782962186, 3, 195.5134133592062, 3, 201.6094988932179, 3, 207.9612448719917, 3, 214.5793733010919, 3, 221.47505585049373, 3, 228.65993271281693, 3, 236.14613225244412, 3, 243.94629147869324, 3, 252.07357737760336, 3, 260.5417091383426, 3, 269.3649813117574, 3, 278.55828794015594, 3, 288.1371476990572, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 276, 3, 268.04193846089197, 3, 260.1275742171778, 3, 252.2587398661716, 3, 244.437344861498, 3, 236.66537873632794, 3, 228.94491446179143, 3, 221.27811194623712, 3, 213.66722168124545, 3, 206.11458854055007, 3, 198.62265573827992, 3, 191.19396895320418, 3, 183.83118062594156, 3, 176.53705443638785, 3, 169.31446996892015, 3, 162.1664275732523, 3, 155.09605342914725, 3, 148.10660482353575, 3, 141.20147564894904, 3, 134.3842021325476, 3, 127.65846880541639, 3, 121.02811472220313, 3, 114.49713994159877, 3, 108.06971227859927, 3, 101.75017433994675, 3, 95.5430508546264, 3, 89.45305631179296, 3, 83.48510291902025, 3, 77.6443088943073, 3, 80.93600710583851, 3, 84.36575407408212, 3, 87.93933935142267, 3, 91.662795295161, 3, 95.54240725037867, 3, 99.58472415985617, 3, 103.79656961895462, 3, 108.18505339412238, 3, 112.75758342446994, 3, 117.52187832667248, 3, 122.48598042430872, 3, 127.65826932363031, 3, 133.04747605867792, 3, 138.66269782962192, 3, 144.51341335920625, 3, 150.60949889321796, 3, 156.96124487199177, 3, 163.57937330109195, 3, 170.4750558504938, 3, 177.65993271281698, 3, 185.14613225244418, 3, 192.9462914786933, 3, 201.0735773776034, 3, 209.5417091383426, 3, 218.3649813117574, 3, 227.5582879401559, 3, 237.13714769905718, 3, 247.11773009334655, 3, 257.51688275205765, 3, 268.35215986785545, 3, 279.6418518292275, 3, 291.40501609540365, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285, 3, 285]
 var threeToFour = [3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 150, 3, 151.04193846089194, 3, 152.12757421717782, 3, 153.2587398661716, 3, 154.437344861498, 3, 155.66537873632794, 3, 156.94491446179143, 3, 158.27811194623712, 3, 159.66722168124545, 3, 161.11458854055007, 3, 162.62265573827992, 3, 164.19396895320418, 3, 165.83118062594156, 3, 167.53705443638785, 3, 169.31446996892015, 3, 171.1664275732523, 3, 173.09605342914725, 3, 175.10660482353575, 3, 177.20147564894904, 3, 179.3842021325476, 3, 181.6584688054164, 3, 184.02811472220313, 3, 186.49713994159876, 3, 189.06971227859924, 3, 191.75017433994674, 3, 194.5430508546264, 3, 197.45305631179295, 3, 200.48510291902025, 3, 203.6443088943073, 3, 206.9360071058385, 3, 210.3657540740821, 3, 213.93933935142266, 3, 217.66279529516098, 3, 221.54240725037866, 3, 225.58472415985614, 3, 229.79656961895458, 3, 234.18505339412235, 3, 238.7575834244699, 3, 243.52187832667246, 3, 248.4859804243087, 3, 253.6582693236303, 3, 259.0474760586779, 3, 264.6626978296219, 3, 270.51341335920625, 3, 276.60949889321796, 3, 282.96124487199177, 3, 289.57937330109195, 3, 296.4750558504938, 3, 303.659932712817, 3, 311.1461322524442, 3, 318.94629147869335, 3, 327.07357737760344, 3, 335.54170913834264, 3, 344.36498131175745, 3, 353.558287940156, 3, 363.13714769905727, 3, 373.1177300933466, 3, 383.5168827520577, 3, 394.3521598678555, 3, 405.64185182922756, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, 3, 405, -3, 405, 3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405]
 var sevenToFour = [-3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 277.04193846089197, -3, 269.1275742171778, -3, 261.2587398661716, -3, 253.437344861498, -3, 245.66537873632794, -3, 237.94491446179143, -3, 230.27811194623712, -3, 222.66722168124545, -3, 215.11458854055007, -3, 207.62265573827992, -3, 200.19396895320418, -3, 192.83118062594156, -3, 185.53705443638785, -3, 178.31446996892015, -3, 171.1664275732523, -3, 164.09605342914725, -3, 157.10660482353575, -3, 150.20147564894904, -3, 143.3842021325476, -3, 136.6584688054164, -3, 130.02811472220313, -3, 123.49713994159877, -3, 117.06971227859927, -3, 110.75017433994675, -3, 104.5430508546264, -3, 98.45305631179296, -3, 92.48510291902025, -3, 86.6443088943073, -3, 80.93600710583851, -3, 84.36575407408212, -3, 87.93933935142267, -3, 91.662795295161, -3, 95.54240725037867, -3, 99.58472415985617, -3, 103.79656961895462, -3, 108.18505339412238, -3, 112.75758342446994, -3, 117.52187832667248, -3, 122.48598042430872, -3, 127.65826932363031, -3, 133.04747605867792, -3, 138.66269782962192, -3, 144.51341335920625, -3, 150.60949889321796, -3, 156.96124487199177, -3, 163.57937330109195, -3, 170.4750558504938, -3, 177.65993271281698, -3, 185.14613225244418, -3, 192.9462914786933, -3, 201.0735773776034, -3, 209.5417091383426, -3, 218.3649813117574, -3, 227.5582879401559, -3, 237.13714769905718, -3, 247.11773009334655, -3, 257.51688275205765, -3, 268.35215986785545, -3, 279.6418518292275, -3, 291.40501609540365, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 285, -3, 286.04193846089197, -3, 287.1275742171778, -3, 288.2587398661716, -3, 289.437344861498, -3, 290.6653787363279, -3, 291.94491446179137, -3, 293.27811194623706, -3, 294.6672216812454, -3, 296.11458854055, -3, 297.6226557382799, -3, 299.19396895320415, -3, 300.8311806259415, -3, 302.5370544363878, -3, 304.3144699689201, -3, 306.16642757325224, -3, 308.09605342914716, -3, 310.10660482353563, -3, 312.20147564894893, -3, 314.3842021325475, -3, 316.65846880541625, -3, 319.028114722203, -3, 321.4971399415986, -3, 324.0697122785991, -3, 326.7501743399466, -3, 329.54305085462624, -3, 332.4530563117928, -3, 335.4851029190201, -3, 338.64430889430713, -3, 341.93600710583837, -3, 345.36575407408196, -3, 345, -3, 345, -3, 345, -3, 345, -3, 345, -3, 345, -3, 345, -3, 345, -3, 345, -3, 345, -3, 345, -3, 345, -3, 345, -3, 345, -3, 345, -3, 345, -3, 345, -3, 345, -3, 345, -3, 345, -3, 346.04193846089197, -3, 347.1275742171778, -3, 348.2587398661716, -3, 349.437344861498, -3, 350.6653787363279, -3, 351.94491446179137, -3, 353.27811194623706, -3, 354.6672216812454, -3, 356.11458854055, -3, 357.6226557382799, -3, 359.19396895320415, -3, 360.8311806259415, -3, 362.5370544363878, -3, 364.3144699689201, -3, 366.16642757325224, -3, 368.09605342914716, -3, 370.10660482353563, -3, 372.20147564894893, -3, 374.3842021325475, -3, 376.65846880541625, -3, 379.028114722203, -3, 381.4971399415986, -3, 384.0697122785991, -3, 386.7501743399466, -3, 389.54305085462624, -3, 392.4530563117928, -3, 395.4851029190201, -3, 398.64430889430713, -3, 401.93600710583837, -3, 405.36575407408196, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405, -3, 405]

 //axe

 var axe = new WebImage("https://codehs.com/uploads/1c6d651dcfb0d3a7a260eb655419d3c8");
 axe.setSize(10, 20);

 // Changing
 var slope = 0;
 var axeInAir = false;
 var santaTracker = 0;
 var santasPosition = 1;
 var spaceDown = false;
 var time = 0;
 var currentJumpHeight = 0;
 var xposition = 0;
 var gameOver = false;
 var rotater = 0;
 var record = false;

 function start() {
     // player.setPosition(2.1066048235356654,178);
     backgroundmusic.play()
     backgroundmusic.loop = true;
     println("The Elves are trying to cut you down.");
     println("Hurry up and collect your ornaments!");
     println("Use w, a, and d to move.");
     println("");
     time = 0;
     setup();
     setTimer(elvemovement, 10);

     setTimer(elvesCollision, 10);
     setTimer(ornCollision, 10);
     setTimer(gravityEffect, 10);
     keyDownMethod(jump);
     keyUpMethod(keyUp);
     mouseClickMethod(click);


 }

 // Adds all of the objects to the screen

 function setup() {
     add(background);
    for(var i = 0; i < objectArray.length; i++){
        add(objectArray[i]);
     
    }
     add(score);
     
     
     add(player);
     add(elf1right);
     add(elf2right);
     add(elf3right);
     for (var i = 0; i < ornaments.length; i++) {
         add(ornaments[i]);
     }
 }
 // stops moving timers when the key is lifted up, only way to make movement smooth
 function keyUp(e) {
     if (e.keyCode == Keyboard.letter('a') || e.keyCode == Keyboard.LEFT) {
         stopTimer(playerMoveLeft);
         movingLeft = false;

     }
     if (e.keyCode == Keyboard.letter('d') || e.keyCode == Keyboard.RIGHT) {
         stopTimer(playerMoveRight);
         movingRight = false;

     }
     if (e.keyCode == Keyboard.letter('w') || e.keyCode == Keyboard.UP) {
         spaceDown = false;
     }
 }

 function elvemovement() {

     if (elftime == 200) {
         elftime = 0;
     }
     elftime += 1;
     if (elftime >= 101) {
         if (elftime == 101) {
             remove(elf1right);
             remove(elf2right);
             remove(elf3right);
             remove(elf3right);
             add(elf1left);
             add(elf2left);
             add(elf3left);
         }
         elf1left.move(-1, 0);
         elf2left.move(-1, 0);
         elf3left.move(-1, 0);
         elf1right.move(-1, 0);
         elf2right.move(-1, 0);
         elf3right.move(-1, 0);

     } else {
         if (elftime == 1) {
             add(elf1right);
             add(elf2right);
             add(elf3right);
             remove(elf1left);
             remove(elf2left);
             remove(elf3left);
         }
         elf1left.move(1, 0);
         elf2left.move(1, 0);
         elf3left.move(1, 0);
         elf1right.move(1, 0);
         elf2right.move(1, 0);
         elf3right.move(1, 0);
     }

 }
 // Checks if player is colliding with anything to his left, then moves all objects but player to the right
 function playerMoveLeft() {
     movingLeft = true
     if (collisionLeft() == false) {
         if (floor.getX() <= -3 && player.getX() < (getWidth() / 2) - (player.getWidth() / 2) + 3) {
             movingLeft = true
             for(var i = 0; i < objectArray.length; i++){
                 objectArray[i].move(3,0);
             
             }
             elf1left.move(3, 0);
             elf2left.move(3, 0);
             if (ornInAir == true) {
                 collectedOrns[collectedOrns.length - 1].move(3, 0);
             }
             elf3left.move(3, 0);
             elf1right.move(3, 0);
             elf2right.move(3, 0);
             if (axeInAir == true) {
                 axe.move(3, 0);
             }
             elf3right.move(3, 0);
             background.move(3, 0);
             
             santa.move(3, 0);
             for (var i = 0; i < ornaments.length; i++) {
                 ornaments[i].move(3, 0);
             }
         } else {
             movingLeft = true
             player.move(-3, 0);
         }

     } else {
         playerCanJump = false;
     }
     if (record == true) {
         print("-3," + player.getY() + ",");
     }
 }

 // Checks if player is colliding with anything to his right, then moves all objects but player to the left

 function playerMoveRight() {
     movingRight = true
     if (collisionRight() == false) {
         if (player.getX() > (getWidth() / 2) - (player.getWidth() / 2) && wallRight.getX() >= getWidth() + 3) {
             movingRight = true
             for(var i = 0; i < objectArray.length; i++){
                 objectArray[i].move(-3,0);
             
             }
             
             elf1left.move(-3, 0);
             
             elf2left.move(-3, 0);
             elf3left.move(-3, 0);
             if (axeInAir == true) {
                 axe.move(-3, 0);
             }
             if (ornInAir == true) {
                 collectedOrns[collectedOrns.length - 1].move(-3, 0);
             }
             elf1right.move(-3, 0);
             elf2right.move(-3, 0);
             elf3right.move(-3, 0);
             background.move(-3, 0);
             
             santa.move(-3, 0);
             for (var i = 0; i < ornaments.length; i++) {
                 ornaments[i].move(-3, 0);
             }
         } else {
             movingRight = true;
             player.move(3, 0);
         }
     } else {
         playerCanJump = false;
     }
     if (record == true) {
         print("3," + player.getY() + ",");
     }
 }

 // jump isnt the best name for this, as it detects the keys for moving too.

 function jump(e) {
     //Allows the player to jump from spacebar w or up arrow, but only if the player is not currentl yin the air and can jump
     if ((e.keyCode == Keyboard.letter('w') || e.keyCode == Keyboard.UP) && playerUp == false && playerCanJump == true && gameOver == false && spaceDown == false) {
         currentJumpHeight = 0;
         playerJumping = true;
         playerCanJump = false;
         spaceDown = true;
         setTimer(playerMove, 10);

         playerUp = true;

     }
     //Starts a movement timer if not already moving
     if ((e.keyCode == Keyboard.letter('a') || e.keyCode == Keyboard.LEFT) && gameOver == false) {
         if (movingLeft == false) {
             setTimer(playerMoveLeft, 10);
         }

     }
     //Starts a movement timer if not already moving
     if ((e.keyCode == Keyboard.letter('d') || e.keyCode == Keyboard.RIGHT) && gameOver == false) {
         if (movingRight == false) {
             setTimer(playerMoveRight, 10);
         }
     }



 }
 // This is also a bad function name, as its not R/L movemnt, but rather the jump
 function playerMove() {

     player.move(0, -9);
     currentJumpHeight += 1;
     playerJumping = true;
     playerCanJump = false;

     // These if statements check if the player is hitting the bottom of a platform, and then stops the jumping.
     if (player.getY() <= platform1.getY() + platform1.getHeight() && player.getY() >= platform1.getY() - player.getHeight()) {
         if (player.getX() >= platform1.getX() - player.getWidth() && player.getX() <= platform1.getX() + platform1.getWidth()) {
             playerJumping = false;

             stopTimer(playerMove);
             // without moving the player a bit at first the gravity wouldnt go, as it would detect a collision
             player.move(0, 9);
         }
     }
     if (player.getY() <= platform2.getY() + platform2.getHeight() && player.getY() >= platform2.getY() - player.getHeight()) {
         if (player.getX() >= platform2.getX() - player.getWidth() && player.getX() <= platform2.getX() + platform2.getWidth()) {

             playerJumping = false;
             stopTimer(playerMove);
             // without moving the player a bit at first the gravity wouldnt go, as it would detect a collision

             player.move(0, 9);
         }
     }
     if (player.getY() <= platform5.getY() + platform5.getHeight() && player.getY() >= platform5.getY() - player.getHeight()) {
         if (player.getX() >= platform5.getX() - player.getWidth() && player.getX() <= platform5.getX() + platform5.getWidth()) {

             playerJumping = false;
             stopTimer(playerMove);
             // without moving the player a bit at first the gravity wouldnt go, as it would detect a collision

             player.move(0, 9);
         }
     }
     if (player.getY() <= platform6.getY() + platform6.getHeight() && player.getY() >= platform6.getY() - player.getHeight()) {
         if (player.getX() >= platform6.getX() - player.getWidth() && player.getX() <= platform6.getX() + platform6.getWidth()) {

             playerJumping = false;
             stopTimer(playerMove);
             // without moving the player a bit at first the gravity wouldnt go, as it would detect a collision

             player.move(0, 9);
         }
     }
     if (player.getY() <= platform6.getY() + platform6.getHeight() && player.getY() >= platform6.getY() - player.getHeight()) {
         if (player.getX() >= platform6.getX() - player.getWidth() && player.getX() <= platform6.getX() + platform6.getWidth()) {

             playerJumping = false;
             stopTimer(playerMove);
             // without moving the player a bit at first the gravity wouldnt go, as it would detect a collision

             player.move(0, 9);
         }
     }

     // This stops the player from jumping and allows gravity to pull them down
     if (currentJumpHeight == jumpHeight) {

         playerJumping = false;
         stopTimer(playerMove);

     }


 }

 //This keeps the player moving down
 function gravityEffect() {
     time += 10;
     // This part makes gravity match the acceleration on earth
     var accel = Math.pow(9.8, (time * .0018))
     var falling = gravity * accel

     // collisionY checks to see if the player is hitting anything underneath it, which would allow it to jump
     if (collisionY() == false) {
         playerCanJump = false;
         player.move(0, falling);

     } else {
         // because the jump command moves at rates higher than one, the player would enter the ground, so this allows the player to be moved to the correct y
         if (player.getY() != whatscorrectY()) {
             player.setPosition(player.getX(), whatscorrectY());
         }

         playerCanJump = true;

         playerUp = false;

         //Resets time to reset acceleration
         time = 0;
     }
     //This ends the game if the player falls into the pit
     if (player.getY() > getHeight()) {
         endGame();
     }
 }

 // standard boiler plate game over, will add a score and text later
 function endGame() {
     //removeAll();
     //   stopTimer(gravityEffect);
     santaon=false;
     stopTimer(playerMove);
     stopTimer(elvemovement);
     stopTimer(playerMoveLeft);
     stopTimer(playerMoveRight);
     if (rotater == 0) {
         rotater += 3;
         setTimer(felling, 13);
     }
     gameOver = true;
     var txt = new Text("GAME OVER", "50pt Arial");
     txt.setColor(Color.red);
     txt.setPosition(getWidth() / 2 - (txt.getWidth() / 2), getHeight() / 2 - (txt.getHeight() / 2));
     add(txt)
 }

 function winner() {
     //removeAll();
     //   stopTimer(gravityEffect);
     stopTimer(playerMove);
     stopTimer(elvemovement);
     stopTimer(playerMoveLeft);
     stopTimer(playerMoveRight);

     gameOver = true;
     var txt = new Text("YOU WIN", "50pt Arial");
     txt.setColor(Color.red);
     txt.setPosition(getWidth() / 2 - (txt.getWidth() / 2), getHeight() / 2 - (txt.getHeight() / 2));
     add(txt)
 }

 function felling() {
     rotater += 3;
     if (elftime >= 100) {
         player.rotate(-3, 0);
     } else {
         player.rotate(3, 0);

     }

     if (rotater >= 90) {
         stopTimer(felling);
     }
 }
 // Stone age collision system.

 // Checks if player is on top of a platform, and returns true for collision. 
 function collisionY() {
     // I get that I could have used && and not two if statements, but I wanted to keep X and Y seperate
     for(var i = 0; i < objectArray.length; i++){
         if (player.getX() >= objectArray[i].getX() - player.getWidth() && player.getX() <= objectArray[i].getX() + objectArray[i].getWidth()) {
             if (player.getY() >= objectArray[i].getY() - player.getHeight() && player.getY() <= (objectArray[i].getY() + objectArray[i].getHeight())) {
                 return true;
             }
         }
     }

     return false;
 }
 // As previously mentioned, this checks to see what the players Y position should be and returns it
 function whatscorrectY() {
    for(var i = 0;i < objectArray.length; i++){
         if (player.getX() >= (objectArray[i].getX() + 4) - player.getWidth() && player.getX() <= objectArray[i].getX() + objectArray[i].getWidth() - 4) {
             if (player.getY() >= objectArray[i].getY() - player.getHeight() && player.getY() <= objectArray[i].getY() + objectArray[i].getHeight()) {
                 return (objectArray[i].getY() - player.getHeight());
             }
         }
    }
     return (player.getY());
 }
 //Checks to see if player is colliding on the left
 function collisionLeft() {
     for (var i = 0; i < objectArray.length; i++) {
         if (player.getY() >= objectArray[i].getY() - player.getHeight() && player.getY() <= objectArray[i].getY() + objectArray[i].getHeight()) {
             if (player.getX() <= objectArray[i].getX() + objectArray[i].getWidth() && player.getX() >= objectArray[i].getX() + objectArray[i].getWidth() - 3) {

                 return true;
             }
         }
     }
     return false;
 }
 //Checks to see if player is colliding on the right
 function collisionRight() {
     for (var i = 0; i < objectArray.length; i++) {
         if (player.getY() >= objectArray[i].getY() - player.getHeight() && player.getY() <= objectArray[i].getY() + objectArray[i].getHeight()) {
             if (player.getX() >= objectArray[i].getX() - player.getWidth() && player.getX() <= objectArray[i].getX() - player.getWidth() + 3) {
                 return true;
             }

         }
     }
     return false;
 }

 function elvesCollision() {
     for (var i = 0; i < elves.length; i++) {
         if (player.getY() >= elves[i].getY() - player.getHeight() && player.getY() <= elves[i].getY() + elves[i].getHeight()) {
             if (player.getX() <= elves[i].getX() + elves[i].getWidth() && player.getX() >= elves[i].getX() - player.getWidth()) {
                 axeEffect.play()
                 backgroundmusic.pause()
                 endGame();
                 stopTimer(elvesCollision);
             }
         }
     }

 }
 var collectedOrns = []

 function ornCollision() {
     var scoreUpdate = false;
     for (var i = 0; i < ornaments.length; i++) {
         if (player.getY() >= ornaments[i].getY() - player.getHeight() && player.getY() <= ornaments[i].getY() + ornaments[i].getHeight()) {
             if (player.getX() <= ornaments[i].getX() + ornaments[i].getWidth() && player.getX() >= ornaments[i].getX() - player.getWidth()) {
                 var ornamentpickup = new Audio("https://codehs.com/uploads/9d507d6969fa763762e21d46d9cf248a");
                 ornamentpickup.play()
                 collectedOrns.push(ornaments[i]);
                 remove(ornaments[i]);
                 ornaments.splice(i, 1);

                 numornaments += 1;
                 scoreUpdate = true;
             }
         }
     }
     if (scoreUpdate == true) {
         remove(score);
         score.setText(numornaments + "/10");
         add(score);
     }
     if (numornaments == 10) {
         // winner();
         santascoming();
         stopTimer(ornCollision);
     }

 }

 function santascoming() {
     hoho.play()
     stopTimer(elvesCollision);
     stopTimer(elvemovement);
     remove(elf1right);
     remove(elf2right);
     remove(elf3right);
     remove(elf1left);
     remove(elf2left);
     remove(elf3left);
     add(elf1left);
     add(elf2left);
     add(elf3left);
     setTimer(elf1Away, 5);
     setTimer(elf2Away, 5);
     setTimer(elf3Away, 5);

 }
 var santaon = false;
 var santaHealth = 3;
 var health = new Text(santaHealth + "/3", "30pt Arial");
 health.setPosition(getWidth() - health.getWidth(), health.getHeight());

 function santaTime() {
     santaon = true;
     add(santa);
     add(health);
     setTimer(playerTracker, 10);
     setTimer(axeThrow, 100);
 }
 var playery;
 var playerx;
 var santay;
 var santax;
 var hoho = new Audio("https://codehs.com/uploads/e3b6e6543c303052b722b878f0f664b2");

 function axeThrow() {
     if (santaMoving == false && axeInAir == false) {
         santay = santa.getY()
         santax = santa.getX();
         playery = player.getY();
         playerx = player.getX();

         slope = (playery - santay) / (playerx - santax);
         axe.setPosition(santax + (santa.getWidth() / 2), santay + (santa.getHeight() / 2));
         add(axe);
         setTimer(axeFlight, (santaHealth / (1 / 6)));
         axeInAir = true;
     }
 }

 function axeFlight() {
     if (axeCollision() == false) {
         if (playerx > santax) {
             axe.move(4, 4 * slope);
         } else if (playerx < santax) {
             axe.move(0 - 4, 4 * (0 - slope));
         } else if (playerx == santax) {
             axe.move(0, 4 * slope);
         }
         axe.rotate(15, 0);
     } else {
         remove(axe);
         stopTimer(axeFlight);
         axeInAir = false;
     }
 }

 function axeCollision() {

     if (player.getY() >= axe.getY() - player.getHeight() && player.getY() <= axe.getY() + axe.getHeight()) {
         if (player.getX() <= axe.getX() + axe.getWidth() && player.getX() >= axe.getX() - player.getWidth()) {

             axeEffect.play()
             backgroundmusic.pause()
             stopTimer(axeThrow);
             endGame();
             return (true);
         }
     }
     if ((axe.getY() > getHeight()) || axe.getY() < 0 - axe.getHeight() || (axe.getX() < 0 - axe.getWidth() && playerx < santax) || (axe.getX() > getWidth() && playerx > santax)) {
         return true;
     }
     return false;
 }

 function click(e) {


     if (santaon == true) {
         ornsantay = e.getY()
         ornsantax = e.getX();
         ornamentThrow();
     }
 }
 var ornslope;
 var ornplayery;
 var ornplayerx;
 var ornsantay;
 var ornsantax;
 var ornInAir = false

 function ornamentThrow() {
     if ((collectedOrns != 0) && ornInAir == false) {
         ornInAir = true;

         ornplayery = player.getY() + (player.getHeight() / 2);
         ornplayerx = player.getX() + (player.getWidth() / 2);

         ornslope = (ornsantay - ornplayery) / (ornsantax - ornplayerx);
         collectedOrns[collectedOrns.length - 1].setPosition((ornplayerx + (player.getWidth() / 2)) - (collectedOrns[collectedOrns.length - 1].getWidth() / 2), ornplayery + (player.getHeight() / 2) - (collectedOrns[collectedOrns.length - 1].getHeight() / 2));
         add(collectedOrns[collectedOrns.length - 1]);
         setTimer(ornFlight, 4);

     }
 }

 function ornFlight() {
     if (flyornCollision() == false) {
         if (ornplayerx < ornsantax) {
             collectedOrns[collectedOrns.length - 1].move(4, 4 * ornslope);
         } else if (ornplayerx > ornsantax) {
             collectedOrns[collectedOrns.length - 1].move(0 - 4, 4 * (0 - ornslope));
         } else if (ornplayerx == ornsantax) {
             collectedOrns[collectedOrns.length - 1].move(0, -1);
         }

     } else {

         stopTimer(ornFlight);
         ornInAir = false;
     }
 }
var shatter = new Audio("https://codehs.com/uploads/e1a09bb88c9189ff9e08a95dc7cc7736")
 function flyornCollision() {
     if (santa.getY() >= collectedOrns[collectedOrns.length - 1].getY() - santa.getHeight() && santa.getY() <= collectedOrns[collectedOrns.length - 1].getY() + collectedOrns[collectedOrns.length - 1].getHeight()) {
         if (santa.getX() <= collectedOrns[collectedOrns.length - 1].getX() + santa.getWidth() && santa.getX() >= collectedOrns[collectedOrns.length - 1].getX() - santa.getWidth()) {
             shatter.play()
             remove(collectedOrns[collectedOrns.length - 1]);
             collectedOrns.splice(collectedOrns.length - 1);
             santaHealth -= 1;
             if (santaHealth == 0) {

                 backgroundmusic.pause()
                 stopTimer(axeThrow);
                 stopTimer(ornamentThrow);
                 winner();
                 //return(true);
             }
             score.setText(collectedOrns.length + "/10");

             health.setText(santaHealth + "/3");

             return (true);

         }
     }
     if ((collectedOrns[collectedOrns.length - 1].getY() > getHeight()) || collectedOrns[collectedOrns.length - 1].getY() < 0 - collectedOrns[collectedOrns.length - 1].getHeight() || (collectedOrns[collectedOrns.length - 1].getX() < 0 - collectedOrns[collectedOrns.length - 1].getWidth() && ornplayerx < santax) || (collectedOrns[collectedOrns.length - 1].getX() > getWidth() && ornplayerx > ornsantax)) {
         shatter.play()
         remove(collectedOrns[collectedOrns.length - 1]);
         collectedOrns.splice(collectedOrns.length - 1);
         score.setText(collectedOrns.length + "/10");
         return true;
     }
     return false;
 }




 function playerTracker() {
     if (player.getX() >= platform1.getX() && player.getX() <= wall1.getX()) {
         if (player.getY() >= platform1.getY() && player.getY() <= floor.getY()) {
             if (santaMoving == false && santasPosition != 1) {
                 santaTracker = 0;
                 setTimer(moveToOne, 10);
                 santaMoving = true;
             }
         }
     }
     if (player.getX() >= platform1.getX() && player.getX() <= platform1.getWidth() + platform1.getX()) {
         if (player.getY() <= platform1.getY()) {
             if (santaMoving == false && santasPosition != 2) {
                 santaTracker = 0;
                 setTimer(moveToTwo, 10);
                 santaMoving = true;
             }
         }
     }
     if (player.getX() >= platform2.getX() && player.getX() <= platform2.getWidth() + platform2.getX()) {
         if (player.getY() <= platform2.getY()) {
             if (santaMoving == false && santasPosition != 5) {
                 santaTracker = 0;
                 setTimer(moveToFive, 10);
                 santaMoving = true;
             }
         }
     }
     if (player.getX() >= wall1.getX() && player.getX() <= wall1.getWidth() + wall1.getX()) {
         if (player.getY() <= wall1.getY() && player.getY() >= platform2.getY()) {
             if (santaMoving == false && santasPosition != 3) {
                 santaTracker = 0;
                 setTimer(moveToThree, 10);
                 santaMoving = true;
             }
         }
     }
     if (player.getX() >= wall1.getX() + wall1.getWidth() && player.getX() <= platform4.getX() + platform4.getWidth()) {
         if (player.getY() >= platform2.getY() && player.getY() <= floor.getY()) {
             if (santaMoving == false && santasPosition != 4) {
                 santaTracker = 0;
                 setTimer(moveToFour, 10);
                 santaMoving = true;
             }
         }
     }
     if (player.getX() >= platform5.getX() && player.getX() <= platform5.getX() + platform5.getWidth()) {
         if (player.getY() <= platform5.getY()) {
             if (santaMoving == false && santasPosition != 6) {
                 santaTracker = 0;
                 setTimer(moveToSix, 10);
                 santaMoving = true;
             }
         }
     }
     if (player.getX() >= platform6.getX() && player.getX() <= wallRight.getX()) {

         if (player.getY() >= platform5.getY() && player.getY() <= floor1.getY()) {

             if (santaMoving == false && santasPosition != 7) {
                 santaTracker = 0;
                 setTimer(moveToSeven, 10);
                 santaMoving = true;
             }
         }
     }
 }

 function moveToOne() {
     if (santasPosition == 2) {
         if (santaTracker == twoToOne.length - 2) {
             stopTimer(moveToOne);
             santaMoving = false;
             santasPosition = 1;
             santa.setPosition(background.getX() + 25, background.getY() + 405);

         }
         santa.move(twoToOne[santaTracker], twoToOne[santaTracker + 1] - santa.getY());

     }
     if (santasPosition == 3) {
         if (santaTracker == threeToOne.length - 2) {
             stopTimer(moveToOne);
             santaMoving = false;
             santasPosition = 1;
             santa.setPosition(background.getX() + 25, background.getY() + 405);
         }
         santa.move(threeToOne[santaTracker], threeToOne[santaTracker + 1] - santa.getY());

     }
     if (santasPosition == 4) {
         if (santaTracker == fourToThree.length - 2) {
             santaTracker = 0;
             santasPosition = 3;
         }
         santa.move(fourToThree[santaTracker], fourToThree[santaTracker + 1] - santa.getY());

     }
     if (santasPosition == 5) {
         if (santaTracker == fiveToTwo.length - 2) {
             santaTracker = 0;
             santasPosition = 2;
             santa.setPosition(platform1.getX() + (platform1.getWidth() / 2) - (santa.getWidth() / 2), platform1.getY() - santa.getHeight());

         }
         santa.move(fiveToTwo[santaTracker], fiveToTwo[santaTracker + 1] - santa.getY());

     }
     if (santasPosition == 6) {
         if (santaTracker == sixToFive.length - 2) {
             santaTracker = 0;
             santasPosition = 5;
         }
         santa.move(sixToFive[santaTracker], sixToFive[santaTracker + 1] - santa.getY());

     }
     if (santasPosition == 7) {
         if (santaTracker == sevenToFour.length - 2) {
             santaTracker = 0;
             santasPosition = 4;
         }
         santa.move(sevenToFour[santaTracker], sevenToFour[santaTracker + 1] - santa.getY());

     }

     santaTracker += 2;
 }

 function moveToTwo() {
     if (santasPosition == 1) {
         if (santaTracker == oneToTwo.length - 2) {
             stopTimer(moveToTwo);
             santaMoving = false;
             santasPosition = 2;
             santa.setPosition(platform1.getX() + (platform1.getWidth() / 2) - (santa.getWidth() / 2), platform1.getY() - santa.getHeight());

         }
         santa.move(oneToTwo[santaTracker], oneToTwo[santaTracker + 1] - santa.getY());

     }
     if (santasPosition == 3) {
         if (santaTracker == threeToTwo.length - 2) {
             stopTimer(moveToTwo);
             santaMoving = false;
             santasPosition = 2;
             santa.setPosition(platform1.getX() + (platform1.getWidth() / 2) - (santa.getWidth() / 2), platform1.getY() - santa.getHeight());

         }
         santa.move(threeToTwo[santaTracker], threeToTwo[santaTracker + 1] - santa.getY());

     }
     if (santasPosition == 4) {
         if (santaTracker == fourToThree.length - 2) {
             santaTracker = 0;
             santasPosition = 3;
             santa.setPosition(wall1.getX() + (wall1.getWidth() / 2) - (santa.getWidth() / 2), wall1.getY() - play.getHeight());
         }
         santa.move(fourToThree[santaTracker], fourToThree[santaTracker + 1] - santa.getY());

     }
     if (santasPosition == 5) {
         if (santaTracker == fiveToTwo.length - 2) {
             stopTimer(moveToTwo);
             santaMoving = false;
             santasPosition = 2;
             santa.setPosition(platform1.getX() + (platform1.getWidth() / 2) - (santa.getWidth() / 2), platform1.getY() - santa.getHeight());

         }
         santa.move(fiveToTwo[santaTracker], fiveToTwo[santaTracker + 1] - santa.getY());

     }
     if (santasPosition == 6) {
         if (santaTracker == sixToFive.length - 2) {
             santaTracker = 0;
             santasPosition = 5;
         }
         santa.move(sixToFive[santaTracker], sixToFive[santaTracker + 1] - santa.getY());

     }
     if (santasPosition == 7) {
         if (santaTracker == sevenToFour.length - 2) {
             santaTracker = 0;
             santasPosition = 4;
         }
         santa.move(sevenToFour[santaTracker], sevenToFour[santaTracker + 1] - santa.getY());

     }

     santaTracker += 2;
 }

 function moveToThree() {
     if (santasPosition == 1) {
         if (santaTracker == oneToThree.length - 2) {
             stopTimer(moveToThree);
             santaMoving = false;
             santasPosition = 3;
             santa.setPosition(wall1.getX() + (wall1.getWidth() / 2) - (santa.getWidth() / 2), wall1.getY() - santa.getHeight());

         }
         santa.move(oneToThree[santaTracker], oneToThree[santaTracker + 1] - santa.getY());

     }
     if (santasPosition == 2) {
         if (santaTracker == twoToOne.length - 2) {
             santaTracker = 0;
             santasPosition = 1;
             santa.setPosition(platform1.getX() + (platform1.getWidth() / 2) - (santa.getWidth() / 2), platform1.getY() - santa.getHeight());

         }
         santa.move(twoToOne[santaTracker], twoToOne[santaTracker + 1] - santa.getY());

     }
     if (santasPosition == 4) {
         if (santaTracker == fourToThree.length - 2) {
             santaMoving = false;
             stopTimer(moveToThree);
             santasPosition = 3;
             santa.setPosition(wall1.getX() + (wall1.getWidth() / 2) - (santa.getWidth() / 2), wall1.getY() - santa.getHeight());

         }
         santa.move(fourToThree[santaTracker], fourToThree[santaTracker + 1] - santa.getY());

     }
     if (santasPosition == 5) {
         if (santaTracker == fiveToTwo.length - 2) {
             santaTracker = 0;
             santasPosition = 2;
             santa.setPosition(platform1.getX() + (platform1.getWidth() / 2) - (santa.getWidth() / 2), platform1.getY() - santa.getHeight());

         }
         santa.move(fiveToTwo[santaTracker], fiveToTwo[santaTracker + 1] - santa.getY());

     }
     if (santasPosition == 6) {
         if (santaTracker == sixToFive.length - 2) {
             santaTracker = 0;
             santasPosition = 5;
         }
         santa.move(sixToFive[santaTracker], sixToFive[santaTracker + 1] - santa.getY());

     }
     if (santasPosition == 7) {
         if (santaTracker == sevenToFour.length - 2) {
             santaTracker = 0;
             santasPosition = 4;
         }
         santa.move(sevenToFour[santaTracker], sevenToFour[santaTracker + 1] - santa.getY());

     }

     santaTracker += 2;
 }

 function moveToFive() {
     if (santasPosition == 1) {
         if (santaTracker == oneToTwo.length - 2) {
             santaTracker = 0;
             santasPosition = 2;
             santa.setPosition(platform1.getX() + (platform1.getWidth() / 2) - (santa.getWidth() / 2), platform1.getY() - santa.getHeight());

         }
         santa.move(oneToTwo[santaTracker], oneToTwo[santaTracker + 1] - santa.getY());

     }
     if (santasPosition == 3) {
         if (santaTracker == threeToTwo.length - 2) {
             santaTracker = 0;
             santasPosition = 2;
             santa.setPosition(platform1.getX() + (platform1.getWidth() / 2) - (santa.getWidth() / 2), platform1.getY() - santa.getHeight());

         }
         santa.move(threeToTwo[santaTracker], threeToTwo[santaTracker + 1] - santa.getY());

     }
     if (santasPosition == 4) {
         if (santaTracker == fourToThree.length - 2) {
             santaTracker = 0;
             santasPosition = 3;
             santa.setPosition(wall1.getX() + (wall1.getWidth() / 2) - (santa.getWidth() / 2), wall1.getY() - play.getHeight());
         }
         santa.move(fourToThree[santaTracker], fourToThree[santaTracker + 1] - santa.getY());

     }
     if (santasPosition == 2) {
         if (santaTracker == twoToFive.length - 2) {
             santaMoving = false;
             stopTimer(moveToFive);
             santasPosition = 5;
             santa.setPosition(platform2.getX() + (platform2.getWidth() / 2) - (santa.getWidth() / 2), platform2.getY() - santa.getHeight());

         }
         santa.move(twoToFive[santaTracker], twoToFive[santaTracker + 1] - santa.getY());

     }
     if (santasPosition == 6) {
         if (santaTracker == sixToFive.length - 2) {
             stopTimer(moveToFive);
             santaMoving = false;
             santasPosition = 5;
             santa.setPosition(platform2.getX() + (platform2.getWidth() / 2) - (santa.getWidth() / 2), platform2.getY() - santa.getHeight());

         }
         santa.move(sixToFive[santaTracker], sixToFive[santaTracker + 1] - santa.getY());

     }
     if (santasPosition == 7) {
         if (santaTracker == sevenToFour.length - 2) {
             santaTracker = 0;
             santasPosition = 4;
         }
         santa.move(sevenToFour[santaTracker], sevenToFour[santaTracker + 1] - santa.getY());

     }

     santaTracker += 2;
 }

 function moveToFour() {
     if (santasPosition == 1) {
         if (santaTracker == oneToThree.length - 2) {
             santaTracker = 0;
             santasPosition = 3;
             santa.setPosition(wall1.getX() + (wall1.getWidth() / 2) - (santa.getWidth() / 2), wall1.getY() - santa.getHeight());

         }
         santa.move(oneToThree[santaTracker], oneToThree[santaTracker + 1] - santa.getY());

     }
     if (santasPosition == 2) {
         if (santaTracker == twoToOne.length - 2) {
             santaTracker = 0;
             santasPosition = 1;
             santa.setPosition(platform1.getX() + (platform1.getWidth() / 2) - (santa.getWidth() / 2), floor.getY() - santa.getHeight());

         }
         santa.move(twoToOne[santaTracker], twoToOne[santaTracker + 1] - santa.getY());

     }
     if (santasPosition == 3) {
         if (santaTracker == threeToFour.length - 2) {
             santaMoving = false;
             stopTimer(moveToFour);
             santasPosition = 4;
             santa.setPosition((wall1.getX() + wall1.getWidth()) + ((platform3.getX() - (wall1.getX() + wall1.getWidth())) / 2) - (santa.getWidth() / 2), floor.getY() - santa.getHeight());

         }
         santa.move(threeToFour[santaTracker], threeToFour[santaTracker + 1] - santa.getY());

     }
     if (santasPosition == 5) {
         if (santaTracker == fiveToFour.length - 2) {
             santaMoving = false;
             stopTimer(moveToFour);
             santasPosition = 4;
             santa.setPosition((wall1.getX() + wall1.getWidth()) + ((platform3.getX() - (wall1.getX() + wall1.getWidth())) / 2) - (santa.getWidth() / 2), floor.getY() - santa.getHeight());
         }
         santa.move(fiveToFour[santaTracker], fiveToFour[santaTracker + 1] - santa.getY());

     }
     if (santasPosition == 6) {
         if (santaTracker == sixToFour.length - 2) {
             santaMoving = false;
             stopTimer(moveToFour);
             santasPosition = 4;
             santa.setPosition((wall1.getX() + wall1.getWidth()) + ((platform3.getX() - (wall1.getX() + wall1.getWidth())) / 2) - (santa.getWidth() / 2), floor1.getY() - santa.getHeight());
         }
         santa.move(sixToFour[santaTracker], sixToFour[santaTracker + 1] - santa.getY());

     }
     if (santasPosition == 7) {
         if (santaTracker == sevenToFour.length - 2) {
             santaMoving = false;
             stopTimer(moveToFour);
             santasPosition = 4;
             santa.setPosition((wall1.getX() + wall1.getWidth()) + ((platform3.getX() - (wall1.getX() + wall1.getWidth())) / 2) - (santa.getWidth() / 2), floor1.getY() - santa.getHeight());
         }
         santa.move(sevenToFour[santaTracker], sevenToFour[santaTracker + 1] - santa.getY());

     }


     santaTracker += 2;
 }

 function moveToSix() {
     if (santasPosition == 1) {
         if (santaTracker == oneToTwo.length - 2) {
             santaTracker = 0;
             santasPosition = 2;
             santa.setPosition(platform1.getX() + (platform1.getWidth() / 2) - (santa.getWidth() / 2), platform1.getY() - santa.getHeight());

         }
         santa.move(oneToTwo[santaTracker], oneToTwo[santaTracker + 1] - santa.getY());

     }
     if (santasPosition == 3) {
         if (santaTracker == threeToTwo.length - 2) {
             santaTracker = 0;
             santasPosition = 2;
             santa.setPosition(platform1.getX() + (platform1.getWidth() / 2) - (santa.getWidth() / 2), platform1.getY() - santa.getHeight());

         }
         santa.move(threeToTwo[santaTracker], threeToTwo[santaTracker + 1] - santa.getY());

     }
     if (santasPosition == 4) {
         if (santaTracker == fourToThree.length - 2) {
             santaTracker = 0;
             santasPosition = 3;
             santa.setPosition(wall1.getX() + (wall1.getWidth() / 2) - (santa.getWidth() / 2), wall1.getY() - play.getHeight());
         }
         santa.move(fourToThree[santaTracker], fourToThree[santaTracker + 1] - santa.getY());

     }
     if (santasPosition == 2) {
         if (santaTracker == twoToFive.length - 2) {
             santaTracker = 0;
             santasPosition = 5;
             santa.setPosition(platform2.getX() + (platform2.getWidth() / 2) - (santa.getWidth() / 2), platform2.getY() - santa.getHeight());

         }
         santa.move(twoToFive[santaTracker], twoToFive[santaTracker + 1] - santa.getY());

     }
     if (santasPosition == 5) {
         if (santaTracker == fiveToSix.length - 2) {
             stopTimer(moveToSix);
             santaMoving = false;
             santasPosition = 6;
             santa.setPosition(platform5.getX() + (platform5.getWidth() / 2) - (santa.getWidth() / 2), platform5.getY() - santa.getHeight());

         }
         santa.move(fiveToSix[santaTracker], fiveToSix[santaTracker + 1] - santa.getY());
     }
     if (santasPosition == 7) {
         if (santaTracker == sevenToFour.length - 2) {
             santaTracker = 0;
             santasPosition = 4;
             santa.setPosition((wall1.getX() + wall1.getWidth()) + ((platform3.getX() - (wall1.getX() + wall1.getWidth())) / 2) - (santa.getWidth() / 2), floor.getY() - santa.getHeight());
         }
         santa.move(sevenToFour[santaTracker], sevenToFour[santaTracker + 1] - santa.getY());

     }

     santaTracker += 2;
 }

 function moveToSeven() {
     if (santasPosition == 1) {
         if (santaTracker == oneToThree.length - 2) {
             santaTracker = 0;
             santasPosition = 3;
             santa.setPosition(wall1.getX() + (wall1.getWidth() / 2) - (santa.getWidth() / 2), wall1.getY() - santa.getHeight());

         }
         santa.move(oneToThree[santaTracker], oneToThree[santaTracker + 1] - santa.getY());

     }
     if (santasPosition == 2) {
         if (santaTracker == twoToOne.length - 2) {
             santaTracker = 0;
             santasPosition = 1;
             santa.setPosition(platform1.getX() + (platform1.getWidth() / 2) - (santa.getWidth() / 2), floor.getY() - santa.getHeight());

         }
         santa.move(twoToOne[santaTracker], twoToOne[santaTracker + 1] - santa.getY());

     }
     if (santasPosition == 3) {
         if (santaTracker == threeToFour.length - 2) {
             santaTracker = 0;
             santasPosition = 4;
             santa.setPosition((wall1.getX() + wall1.getWidth()) + ((platform3.getX() - (wall1.getX() + wall1.getWidth())) / 2) - (santa.getWidth() / 2), floor.getY() - santa.getHeight());

         }
         santa.move(threeToFour[santaTracker], threeToFour[santaTracker + 1] - santa.getY());

     }
     if (santasPosition == 5) {
         if (santaTracker == fiveToFour.length - 2) {
             santaTracker = 0;
             santasPosition = 4;
             santa.setPosition((wall1.getX() + wall1.getWidth()) + ((platform3.getX() - (wall1.getX() + wall1.getWidth())) / 2) - (santa.getWidth() / 2), floor.getY() - santa.getHeight());
         }
         santa.move(fiveToFour[santaTracker], fiveToFour[santaTracker + 1] - santa.getY());

     }
     if (santasPosition == 6) {
         if (santaTracker == sixToFour.length - 2) {
             santaTracker = 0;
             santasPosition = 4;
             santa.setPosition((wall1.getX() + wall1.getWidth()) + ((platform3.getX() - (wall1.getX() + wall1.getWidth())) / 2) - (santa.getWidth() / 2), floor1.getY() - santa.getHeight());
         }
         santa.move(sixToFour[santaTracker], sixToFour[santaTracker + 1] - santa.getY());

     }
     if (santasPosition == 4) {
         if (santaTracker == fourToSeven.length - 2) {
             santaMoving = false;
             stopTimer(moveToSeven);
             santasPosition = 7;
             santa.setPosition(platform6.getX() + (platform6.getWidth() / 2) - (santa.getWidth() / 2), platform6.getY() - santa.getHeight());
         }
         santa.move(fourToSeven[santaTracker], fourToSeven[santaTracker + 1] - santa.getY());

     }


     santaTracker += 2;
 }




 function elf3Away() {
     if (elf3left.getX() + elf3left.getWidth() >= 0) {
         elf3left.move(-6, 0);
     }
     if (elf3left.getX() + elf3left.getWidth() <= 0) {
         remove(elf3left)
         stopTimer(elf3Away);
     }
 }

 function elf2Away() {
     if (elf2left.getX() + elf2left.getWidth() >= 0) {
         elf2left.move(-6, 0);
     }
     if (elf2left.getX() + elf2left.getWidth() <= 0) {
         remove(elf2left)
         stopTimer(elf2Away);
     }

 }

 function elf1Away() {
     if (elf1left.getX() + elf1left.getWidth() >= 0) {
         elf1left.move(-6, 0);
     }
     if (elf1left.getX() + elf1left.getWidth() <= 0) {
         remove(elf1left)
         stopTimer(elf1Away);
         santaTime();
     }


 }


    if (typeof start === 'function') {
        start();
    }
};
